<h2>Spending Report for <%= Date::MONTHNAMES[@month] %>, <%= @year %></h2>

<%= j @totalAmount %>
<br/>
<%= j @category_amounts.to_json.html_safe %>


<script>


var category_amounts = <%= j @category_amounts.to_json.html_safe %> ;
var totalAmount = <%= j @totalAmount %>;

var color = d3.scale.category20();

var width = 960,
    height = 500,
    radius = Math.min(width, height) / 2;

var arc = d3.svg.arc()
    .outerRadius(radius - 10)
    .innerRadius(100);

var pie = d3.layout.pie()
    .value(function(d) { return d.amount; });

var body = d3.select("body")

var svg = body.append("svg")
    .attr("width", width)
    .attr("height", height)
    .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");


category_amounts.forEach(function(d) {
  d.amount = +d.amount;
});

var g = svg.selectAll(".arc")
    .data(pie(category_amounts))
    .enter().append("g")
    .attr("class", function(d,i){ return "arc-" + i + " " + this.startAngle});

g.append("path")
    .attr("d", arc)
    .style("fill", function(d, i) { return color(i); })
    .on("mouseover", catDetail( true, d3.select(this) ))
    .on("mouseout", catDetail( false, d3.select(this) ));

g.filter(function(d){ return d.endAngle - d.startAngle > (Math.PI/10)})
    .append("text")
    .attr("transform", function(d) { return "translate(" + arc.centroid(d)[0] + "," + arc.centroid(d)[1] + ")"; })
    .attr("dy", ".35em")
    .style("text-anchor", "middle")
    .text(function(d,i) { return d.data.category; });

g.filter(function(d){ return d.endAngle - d.startAngle > (Math.PI/10)})
    .append("text")
    .attr("transform", function(d) { return "translate(" + arc.centroid(d)[0] + "," + (arc.centroid(d)[1] + 15) + ")"; })
    .attr("dy", ".35em")
    .style("text-anchor", "middle")
    .text(function(d) { return Math.round((d.data.amount/totalAmount)*100) + " %"; });

function catDetail( show, elem )
{
  return function( d, i) {

    // console.log(d);
    

    // save selection of infobox so that we can later change it's position
    var infobox = d3.select(".infobox");

    if( show )
    {

      var text = "<strong>" + d.data.category + "</strong>";

      var boxWidth = text.length*3; 
      
      text += "<br/>$" + Math.round(d.data.amount)  + "<br/>(" + (Math.round((d.data.amount/totalAmount)*100)) + "%)" ;

      // this returns x,y coordinates of the mouse in relation to our svg canvas
      var box = d3.mouse(this);
     
      //console.log( this );
      // now we just position the infobox roughly where our mouse is
      infobox.style("left", box[0] + width/2  + "px" );
      infobox.style("top", box[1] + height/2 + 40 + "px");
      infobox.style("width", boxWidth + "px");
      infobox.style("padding", "10px");
      infobox.html( text );
    }
    else
    {
      infobox.style("width", "0px");
      infobox.style("padding", "0px");
      infobox.html("");
    }
  };
}


</script>