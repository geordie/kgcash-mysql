<div class="row">
	<div class="col-md-1">
	</div>
	<div class="col-md-10 center-block text-center">
		<h2><%= title if local_assigns[:title] %></h2>
		<svg id="<%= local_assigns[:domId] ? domId : "chartStacked" %>"></svg>
	</div>
	<div class="col-md-1">
	</div>
</div>

<script type="text/javascript">

	var valField = "<%= local_assigns[:valueField] ? valueField : "debit" %>"
	function transform(data) {
		// Destination format: [{key:name,values:[{x:quantum,y:debit},...]}]

		var data_nvd3 = new Array();
		var dataObj = new Object();
		var minQuantum = Number.MAX_SAFE_INTEGER;
		var maxQuantum = 0;

		for( var i = 0 ; i < data.length ; i++ ){

			var key = data[i].name;
			var quantum = data[i].quantum;
			var value = data[i][valField];

			minQuantum = Math.min(quantum,minQuantum);
			maxQuantum = Math.max(quantum,maxQuantum);

			if (!(key in dataObj)){
				dataObj[key] = new Object();
				dataObj[key].values = new Array();
			}

			var obj = new Object();
			obj.x = quantum;
			obj.y = parseFloat(value);
			dataObj[key].values[obj.x] = obj;
		}

		for( key in dataObj ){
			// Fill in any blanks
			for( i = 0 ; i <= maxQuantum; i++)
			{
				if( dataObj[key].values[i] == null)
				{
					dataObj[key].values[i] = {"x":i,"y":0};
				}
			}
			dataObj[key].values.shift();
			var entry = {"key":key,"values":dataObj[key].values};
			data_nvd3.push(entry);
		}
		return data_nvd3;
	}

	function buildMultiBarChart( )
	{
		var domId = "<%= local_assigns[:domId] ? "#" + domId : "#chartStacked" %>";

		var avg = "<%= local_assigns[:average] ? average : nil %>";

		var chartDataIndex = <%= local_assigns[:chartDataIndex] ? chartDataIndex : 0 %>;

		var data = transform(<%= local_assigns[:data] %>);

		var height = 550;

		var chart;
		nv.addGraph(function() {
			chart = nv.models.multiBarChart()
				.stacked(true)
				.showControls(false)
				.clipEdge(true)
				.useInteractiveGuideline(true)
				.height(height)
				;

			chart.xAxis
				.showMaxMin(false);

			chart.yAxis
				.tickFormat(d3.format('d'));

			d3.select(domId)
				.datum(data)
				.transition()
				.duration(500)
				.attr("height",height)
				.call(chart);

			nv.utils.windowResize(chart.update);

			return chart;
		});
	}

	buildMultiBarChart();

</script>
